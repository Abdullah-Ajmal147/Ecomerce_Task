"""
Django settings for ecommerce project.

Generated by 'django-admin startproject' using Django 2.2.13.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'euqfxd!heu)8a0g-3@@!yv_f01%3_jja^3vp^tlv52%!n5)+q)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = []
ALLOWED_HOSTS = ['*','univeristy.local']

# Application definition

INSTALLED_APPS = [
  'django.contrib.admin',
  'django.contrib.auth',
  'django.contrib.contenttypes',
  'django.contrib.sessions',
  'django.contrib.messages',
  'django.contrib.staticfiles',
  'drf_yasg',
  'rest_framework_simplejwt',
  'rest_framework',

  'user_services',
  'tenants',
  'api',

]

MIDDLEWARE = [
  'django.middleware.security.SecurityMiddleware',
  'django.contrib.sessions.middleware.SessionMiddleware',
  'django.middleware.common.CommonMiddleware',
  'django.middleware.csrf.CsrfViewMiddleware',
  'django.contrib.auth.middleware.AuthenticationMiddleware',
  'django.contrib.messages.middleware.MessageMiddleware',
  'django.middleware.clickjacking.XFrameOptionsMiddleware',
  'api.middleware.EcommerceMiddleware'
]

# DATABASE_ROUTERS = ['api.router.SchoolRouter']

ROOT_URLCONF = 'ecommerce.urls'

TEMPLATES = [
  {
    'BACKEND': 'django.template.backends.django.DjangoTemplates',
    'DIRS': [],
    'APP_DIRS': True,
    'OPTIONS': {
      'context_processors': [
        'django.template.context_processors.debug',
        'django.template.context_processors.request',
        'django.contrib.auth.context_processors.auth',
        'django.contrib.messages.context_processors.messages',
      ],
    },
  },
]

WSGI_APPLICATION = 'ecommerce.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'test_erp',
#         'USER': 'postgres',
#         'PASSWORD': '123456',
#         'HOST': '44.205.253.131',
#         'PORT': '5432',
#     }
# }


DATABASES = {
  'default': {
    'ENGINE': 'django.db.backends.postgresql_psycopg2',
    #'ENGINE': 'tenant_schemas.postgresql_backend',
    'NAME': "Ecomerce",
    'USER': 'postgres',
    'PASSWORD': 'root',
    'HOST': 'localhost',
    'PORT': '5432',
  },
'test_db': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'OPTIONS' : {
            'options': '-c search_path=test_db'
        },
    'NAME': 'test_db',
    'USER':'postgres',
    'PASSWORD':'postgres',
    'HOST':'localhost',
    'PORT':'5433',
},
}

# DATABASE_ROUTERS = (
#   'tenant_schemas.routers.TenantSyncRouter',
# )

REST_FRAMEWORK = {
  'DEFAULT_AUTHENTICATION_CLASSES': (

    'rest_framework_simplejwt.authentication.JWTAuthentication',
  ),
  'DEFAULT_PERMISSION_CLASSES': [
    'rest_framework.permissions.IsAuthenticated',
  ]

}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
  {
    'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
  },
  {
    'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
  },
  {
    'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
  },
  {
    'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
  },
]

AUTH_USER_MODEL = 'user_services.User'

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

SWAGGER_SETTINGS = {
  'SECURITY_DEFINITIONS': {
    'api_key': {
      'type': 'apiKey',
      'in': 'header',
      'name': 'Authorization'
    }
  },
}

# SWAGGER_SETTINGS = {
#     "exclude_namespaces": [], # List URL namespaces to ignore
#     "api_version": '0.1',  # Specify your API's version
#     "api_path": "/",  # Specify the path to your API not a root level
#     "enabled_methods": [  # Specify which methods to enable in Swagger UI
#         'get',
#         'post',
#         'put',
#         'patch',
#         'delete'
#     ],
#     "api_key": '', # An API key
#     "is_authenticated": False,  # Set to True to enforce user authentication,
#     "is_superuser": False,  # Set to True to enforce admin only access
# }
